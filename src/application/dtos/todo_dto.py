"""
DTOs Todo - Couche Application (Clean Architecture)

Les Data Transfer Objects (DTOs) servent d'interface entre les couches :
- Valident les donn√©es entrantes (API ‚Üí Application)
- Formatent les donn√©es sortantes (Application ‚Üí API)
- D√©couplent les entit√©s m√©tier des formats d'√©change

Avantages des DTOs :
- Validation robuste avec Pydantic
- Contr√¥le pr√©cis des champs expos√©s √† l'API
- Documentation automatique pour Swagger
- Type safety et auto-compl√©tion
- Gestion des mises √† jour partielles (PATCH)

Types de DTOs :
- Create : Donn√©es n√©cessaires pour cr√©er une todo
- Update : Mise √† jour partielle (tous champs optionnels)
- Response : Format de sortie avec ID et owner_id
"""

from typing import Optional
from pydantic import BaseModel, Field, validator


class TodoBaseDTO(BaseModel):
    """
    DTO de base contenant les champs communs aux todos.

    Sert de classe parente pour √©viter la duplication de code.
    Contient toutes les validations m√©tier communes :
    - Titre entre 3 et 50 caract√®res
    - Description entre 3 et 100 caract√®res
    - Priorit√© entre 1 et 5
    - Statut completed par d√©faut √† False
    """

    # Titre de la t√¢che - obligatoire avec validation de longueur
    title: str = Field(
        min_length=3,           # Minimum 3 caract√®res pour √™tre significatif
        max_length=50,          # Maximum 50 pour les affichages UI
        description="Le titre de la t√¢che (3-50 caract√®res, obligatoire)"
    )

    # Description d√©taill√©e - obligatoire mais peut √™tre courte
    description: str = Field(
        min_length=3,           # Minimum pour √©viter les descriptions vides
        max_length=100,         # Limite pour la lisibilit√©
        description="Description d√©taill√©e de la t√¢che (3-100 caract√®res)"
    )

    # Priorit√© num√©rique - syst√®me √† 5 niveaux
    priority: int = Field(
        gt=0,                   # Strictement sup√©rieur √† 0 (donc >= 1)
        lt=6,                   # Strictement inf√©rieur √† 6 (donc <= 5)
        default=1,              # Priorit√© faible par d√©faut
        description="Niveau de priorit√© (1=faible, 2=normale, 3=moyenne, 4=haute, 5=critique)"
    )

    # Statut de completion - False par d√©faut (nouvelle t√¢che)
    completed: bool = Field(
        default=False,
        description="Indique si la t√¢che est termin√©e (False=en cours, True=termin√©e)"
    )


class TodoCreateDTO(TodoBaseDTO):
    """
    DTO pour la cr√©ation d'une nouvelle todo.

    H√©rite de TodoBaseDTO, donc tous les champs sont OBLIGATOIRES.
    Utilis√© par l'endpoint POST /todos/create.

    Validation automatique :
    - Titre : 3-50 caract√®res
    - Description : 3-100 caract√®res
    - Priorit√© : 1-5
    - Completed : par d√©faut False

    L'ID et owner_id sont g√©r√©s automatiquement :
    - ID : g√©n√©r√© par la base de donn√©es
    - owner_id : extrait du token JWT de l'utilisateur connect√©
    """
    pass  # H√©rite simplement de TodoBaseDTO


class TodoUpdateDTO(BaseModel):
    """
    DTO pour la mise √† jour partielle d'une todo (PATCH).

    üéØ FONCTIONNALIT√â CL√â : Mise √† jour partielle
    - Tous les champs sont OPTIONNELS
    - Seuls les champs fournis sont mis √† jour
    - Les autres champs restent inchang√©s

    Exemples d'utilisation :
    - {"title": "Nouveau titre"} ‚Üí met √† jour seulement le titre
    - {"priority": 4, "completed": true} ‚Üí met √† jour priorit√© et statut
    - {"description": "Nouvelle desc"} ‚Üí met √† jour seulement la description

    La validation s'applique uniquement aux champs fournis.
    """

    # Tous les champs sont optionnels pour la mise √† jour partielle
    title: Optional[str] = Field(
        None,                   # None = champ non fourni, ne pas mettre √† jour
        min_length=3,
        max_length=50,
        description="Nouveau titre de la t√¢che (optionnel, 3-50 caract√®res)"
    )

    description: Optional[str] = Field(
        None,
        min_length=3,
        max_length=100,
        description="Nouvelle description de la t√¢che (optionnel, 3-100 caract√®res)"
    )

    priority: Optional[int] = Field(
        None,
        gt=0,
        lt=6,
        description="Nouvelle priorit√© (optionnel, 1-5)"
    )

    completed: Optional[bool] = Field(
        None,
        description="Nouveau statut de completion (optionnel)"
    )

    class Config:
        """Configuration avec exemple pour la documentation Swagger."""
        json_schema_extra = {
            "example": {
                "title": "Titre mis √† jour",
                "priority": 3
                # Note : seuls title et priority sont fournis ‚Üí mise √† jour partielle
            }
        }


class TodoResponseDTO(TodoBaseDTO):
    """
    DTO pour les r√©ponses API contenant une todo compl√®te.

    H√©rite de TodoBaseDTO et ajoute les champs syst√®mes :
    - id : identifiant unique g√©n√©r√© par la DB
    - owner_id : propri√©taire de la t√¢che (s√©curit√©)

    Utilis√© par tous les endpoints qui retournent des todos :
    - GET /todos/all
    - GET /todos/{id}
    - POST /todos/create (retour apr√®s cr√©ation)
    - PATCH /todos/{id} (retour apr√®s mise √† jour)

    La configuration from_attributes=True permet la conversion
    automatique depuis les entit√©s Todo du domain.
    """

    # ID unique g√©n√©r√© par la base de donn√©es
    id: int = Field(
        description="Identifiant unique de la t√¢che (g√©n√©r√© automatiquement)"
    )

    # Propri√©taire pour l'isolation des donn√©es et la s√©curit√©
    owner_id: Optional[int] = Field(
        default=None,
        description="Identifiant du propri√©taire de la t√¢che (s√©curit√©)"
    )

    class Config:
        """
        Configuration Pydantic pour les r√©ponses API.

        from_attributes=True : Permet la conversion automatique depuis
        les entit√©s Todo du domain vers ce DTO de r√©ponse.

        json_schema_extra : Exemple affich√© dans la documentation Swagger.
        """
        from_attributes = True  # Conversion depuis entit√©s Todo
        json_schema_extra = {
            "example": {
                "id": 1,
                "title": "Compl√©ter le projet",
                "description": "Finir l'impl√©mentation de l'API FastAPI",
                "priority": 3,
                "completed": False,
                "owner_id": 1,
            }
        }
